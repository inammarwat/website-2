---
title: "Billboard Graphic"
execute:
  echo: false
---

```{r}
library(tidyverse)
```

```{r billboard-plot, fig.width=8, fig.height=5, message=FALSE}
# Load packages
library(tidyverse)     # includes ggplot2, dplyr, tidyr, readr, etc.
library(tidyr)         # billboard tibble lives here

# 1. Reshape billboard to long form: one row per song-week
billboard_long <- billboard %>%                               # 317 songs, wide format
  pivot_longer(cols = starts_with("wk"),
               names_to   = "week",
               values_to  = "rank",
               values_drop_na = TRUE) %>%                     # drop NA chart positions
  mutate(week = parse_number(week))                           # wk1 → 1, wk2 → 2 …

# 2. Pick the 5 songs with the single best peak rank (the lower the better)
top5 <- billboard_long %>%
  group_by(artist, track) %>%
  summarise(best_rank = min(rank), .groups = "drop") %>%
  arrange(best_rank) %>%
  slice_head(n = 5)

# 3. Keep only those top 5 and limit to the first 20 chart weeks
plot_dat <- billboard_long %>%
  semi_join(top5, by = c("artist", "track")) %>%
  filter(week <= 20)

# 4. Plot
ggplot(plot_dat,
       aes(x = week, y = rank, colour = track, group = track)) +
  geom_line(size = 1.3) +
  scale_y_reverse(breaks = seq(1, 100, 10)) +                 # rank 1 at top
  labs(
    title   = "How 2000’s Biggest Billboard Hits Climbed (and Fell)",
    subtitle = "Chart trajectory of the 5 songs with the best peak ranks\n(first 20 weeks on Hot 100)",
    x = "Week on chart",
    y = "Billboard rank (1 = best)",
    colour = "Song title"
  ) +
  theme_minimal(base_size = 14) +
  theme(legend.position = "bottom")
```
